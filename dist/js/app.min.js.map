{"version":3,"sources":["app.min.js"],"names":["harvester","require","guard","builder","test","autospawn","module","exports","loop","_name","Game","creeps","creep","memory","role","mustGenerate","maxNumber","active","i","createCreep","create","spawns","Spawn1","energy","spawning","desired","max","MOVE","WORK","CARRY","ATTACK","energyCapacity","carry","carryCapacity","transferEnergy","ERR_NOT_IN_RANGE","say","moveTo","targets","room","find","FIND_CONSTRUCTION_SITES","length","build","controller","upgradeController","createConstructionSite","STRUCTURE_ROAD","pos","findInRange","FIND_HOSTILE_CREEPS","attack","flags","Flag1","sources","FIND_SOURCES","harvest","FIND_SOURCES_ACTIVE"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global Game */\n'use strict';\n\nvar harvester = require('harvester');\nvar guard = require('guard');\nvar builder = require('builder');\nvar test = require('test');\nvar autospawn = require('autospawn');\n\nmodule.exports.loop = function () {\n\n  autospawn();\n\n  for (var _name in Game.creeps) {\n    if (_name) {\n      var creep = Game.creeps[_name];\n\n      if (creep.memory.role === 'harvester') {\n        harvester(creep);\n      }\n\n      if (creep.memory.role === 'builder') {\n        builder(creep);\n      }\n\n      if (creep.memory.role === 'guard') {\n        guard(creep);\n      }\n\n      if (creep.memory.role === 'test') {\n        test(creep);\n      }\n    }\n  }\n};\n/* global Game, MOVE, WORK, CARRY, ATTACK */\n'use strict';\n\nmodule.exports = function () {\n\n  // only generate if larger than 200 energy\n  if (Game.spawns.Spawn1.energy < 200 || !!Game.spawns.Spawn1.spawning) {\n    return;\n  }\n\n  // Generate these creeps\n  var creeps = {\n    harvester: {\n      desired: 4,\n      max: 4,\n      create: function create() {\n        Game.spawns.Spawn1.createCreep([MOVE, WORK, CARRY], null, { role: 'harvester' });\n      }\n    },\n    builder: {\n      desired: 2,\n      max: 2,\n      create: function create() {\n        Game.spawns.Spawn1.createCreep([MOVE, WORK, CARRY], null, { role: 'builder' });\n      }\n    },\n    guard: {\n      desired: 10,\n      max: 12,\n      create: function create() {\n        Game.spawns.Spawn1.createCreep([MOVE, WORK, CARRY, ATTACK], null, { role: 'guard' });\n      }\n    },\n    test: {\n      desired: 0,\n      max: 1,\n      create: function create() {\n        Game.spawns.Spawn1.createCreep([MOVE, WORK, CARRY], null, { role: 'test' });\n      }\n    }\n  };\n\n  function mustGenerate(maxNumber, role) {\n    var active = 0;\n\n    // collect roles\n    for (var i in Game.creeps) {\n      if (role === Game.creeps[i].memory.role) {\n        active = active + 1;\n      }\n    }\n    return active < maxNumber;\n  }\n\n  function createCreep(role) {\n    if (typeof creeps[role].create === 'function') {\n      void 0;\n      creeps[role].create();\n    }\n  }\n\n  // create desired amount of creeps\n  for (var role in creeps) {\n    if (creeps[role] && mustGenerate(creeps[role].desired, role)) {\n      if (typeof creeps[role].create === 'function') {\n        createCreep(role);\n        return; // done\n      }\n    }\n  }\n\n  // when full with energy..\n  if (Game.spawns.Spawn1.energyCapacity === Game.spawns.Spawn1.energy) {\n    // create max amount of creeps\n    for (var role in creeps) {\n      if (creeps[role] && mustGenerate(creeps[role].max, role)) {\n        createCreep(role);\n        return; // done\n      }\n    }\n  }\n};\n/* global Game, ERR_NOT_IN_RANGE, FIND_CONSTRUCTION_SITES, STRUCTURE_ROAD */\n'use strict';\n\nmodule.exports = function (creep) {\n\n  // only build when having more than ... energy\n  if (Game.spawns.Spawn1.energy <= 275 || !!Game.spawns.Spawn1.spawning) {\n    if (creep.carry.energy === 0) {\n      // let creep finish his energy first\n      return;\n    }\n  }\n\n  // collect energy\n  if (creep.carry.energy === 0) {\n    if (creep.carry.energy <= creep.carryCapacity && Game.spawns.Spawn1.transferEnergy(creep) === ERR_NOT_IN_RANGE) {\n      creep.say('gather resources');\n      creep.moveTo(Game.spawns.Spawn1);\n    }\n    return;\n  }\n\n  // build construction\n  var targets = creep.room.find(FIND_CONSTRUCTION_SITES);\n  if (targets.length) {\n    creep.say('building');\n    if (creep.build(targets[0]) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(targets[0]);\n    }\n    return;\n  }\n\n  // upgrade controller\n  if (creep.room.controller) {\n    creep.say('upgrade controller');\n    if (creep.upgradeController(creep.room.controller) === ERR_NOT_IN_RANGE) {\n      creep.room.createConstructionSite(creep, STRUCTURE_ROAD); // build road to the controller\n      creep.moveTo(creep.room.controller);\n    }\n    return;\n  }\n};\n/* global Game, FIND_HOSTILE_CREEPS, ERR_NOT_IN_RANGE */\n\"use strict\";\n\nmodule.exports = function (creep) {\n  // let targets = creep.room.find(FIND_HOSTILE_CREEPS);\n  var targets = creep.pos.findInRange(FIND_HOSTILE_CREEPS, 15);\n  if (targets.length) {\n    if (creep.attack(targets[0]) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(targets[0]);\n    }\n  } else {\n    if (Game.flags.Flag1) {\n      creep.moveTo(Game.flags.Flag1);\n    }\n  }\n};\n/* global Game, ERR_NOT_IN_RANGE, FIND_SOURCES */\n\"use strict\";\n\nmodule.exports = function (creep) {\n  if (creep.carry.energy < creep.carryCapacity) {\n    var sources = creep.room.find(FIND_SOURCES);\n    if (creep.harvest(sources[0]) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(sources[0]);\n    }\n  } else if (creep.transferEnergy(Game.spawns.Spawn1) === ERR_NOT_IN_RANGE) {\n    creep.moveTo(Game.spawns.Spawn1);\n  }\n};\n/* global FIND_SOURCES_ACTIVE, STRUCTURE_ROAD */\n'use strict';\n\n// let builder = require('builder');\n\nmodule.exports = function (creep) {\n\n  // build road to source\n  var sources = creep.room.find(FIND_SOURCES_ACTIVE);\n  creep.moveTo(sources[0]);\n  creep.room.createConstructionSite(creep, STRUCTURE_ROAD);\n};"],"sourceRoot":"/source/"}