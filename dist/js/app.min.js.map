{"version":3,"sources":["app.min.js"],"names":["harvester","require","guard","ranger","builder","healer","test","autospawn","module","exports","loop","_name","Game","creeps","creep","memory","role","mustGenerate","maxNumber","active","i","createCreep","create","spawns","Spawn1","energy","spawning","desired","max","canCreateCreep","MOVE","WORK","CARRY","OK","ATTACK","RANGED_ATTACK","HEAL","energyCapacity","carry","carryCapacity","sources","room","find","FIND_SOURCES","harvest","ERR_NOT_IN_RANGE","moveTo","transferEnergy","say","targets","FIND_CONSTRUCTION_SITES","length","build","controller","upgradeController","createConstructionSite","STRUCTURE_ROAD","pos","findInRange","FIND_HOSTILE_CREEPS","attack","flags","Flag1","FIND_SOURCES_ACTIVE","needsHealing","other","hits","maxHits","FIND_MY_CREEPS","heal","Flag2"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global Game */\n'use strict';\n\nvar harvester = require('harvester');\nvar guard = require('guard');\nvar ranger = require('ranger');\nvar builder = require('builder');\nvar healer = require('healer');\nvar test = require('test');\nvar autospawn = require('autospawn');\n\nmodule.exports.loop = function () {\n\n  autospawn();\n\n  for (var _name in Game.creeps) {\n    if (_name) {\n      var creep = Game.creeps[_name];\n\n      if (creep.memory.role === 'harvester') {\n        harvester(creep);\n      }\n\n      if (creep.memory.role === 'builder') {\n        builder(creep);\n      }\n\n      if (creep.memory.role === 'guard') {\n        guard(creep);\n      }\n\n      if (creep.memory.role === 'ranger') {\n        ranger(creep);\n      }\n\n      if (creep.memory.role === 'healer') {\n        healer(creep);\n      }\n\n      if (creep.memory.role === 'test') {\n        test(creep);\n      }\n    }\n  }\n};\n/* global Game, MOVE, WORK, CARRY, ATTACK, RANGED_ATTACK, HEAL, OK */\n'use strict';\n\nmodule.exports = function () {\n\n  // only generate if larger than 200 energy\n  if (Game.spawns.Spawn1.energy < 200 || !!Game.spawns.Spawn1.spawning) {\n    return;\n  }\n\n  // Generate these creeps\n  var creeps = {\n    harvester: {\n      desired: 4,\n      max: 6,\n      create: function create() {\n        if (Game.spawns.Spawn1.canCreateCreep([MOVE, WORK, CARRY]) === OK) {\n          return Game.spawns.Spawn1.createCreep([MOVE, WORK, CARRY], null, { role: 'harvester' });\n        }\n      }\n    },\n    builder: {\n      desired: 2,\n      max: 2,\n      create: function create() {\n        if (Game.spawns.Spawn1.canCreateCreep([MOVE, WORK, CARRY]) === OK) {\n          return Game.spawns.Spawn1.createCreep([MOVE, WORK, CARRY], null, { role: 'builder' });\n        }\n      }\n    },\n    guard: {\n      desired: 6,\n      max: 12,\n      create: function create() {\n        if (Game.spawns.Spawn1.canCreateCreep([MOVE, WORK, CARRY, ATTACK]) === OK) {\n          return Game.spawns.Spawn1.createCreep([MOVE, WORK, CARRY, ATTACK], null, { role: 'guard' });\n        }\n      }\n    },\n    ranger: {\n      desired: 4,\n      max: 6,\n      create: function create() {\n        if (Game.spawns.Spawn1.canCreateCreep([MOVE, RANGED_ATTACK]) === OK) {\n          return Game.spawns.Spawn1.createCreep([MOVE, WORK, CARRY, RANGED_ATTACK], null, { role: 'ranger' });\n        }\n      }\n    },\n    healer: {\n      desired: 2,\n      max: 4,\n      create: function create() {\n        if (Game.spawns.Spawn1.canCreateCreep([MOVE, HEAL]) === OK) {\n          return Game.spawns.Spawn1.createCreep([MOVE, HEAL], null, { role: 'ranger' });\n        }\n      }\n    },\n    test: {\n      desired: 0,\n      max: 1,\n      create: function create() {\n        if (Game.spawns.Spawn1.canCreateCreep([MOVE, WORK, CARRY]) === OK) {\n          return Game.spawns.Spawn1.createCreep([MOVE, WORK, CARRY], null, { role: 'test' });\n        }\n      }\n    }\n  };\n\n  function mustGenerate(maxNumber, role) {\n    var active = 0;\n\n    // collect roles\n    for (var i in Game.creeps) {\n      if (role === Game.creeps[i].memory.role) {\n        active = active + 1;\n      }\n    }\n    return active < maxNumber;\n  }\n\n  function createCreep(role) {\n    if (typeof creeps[role].create === 'function') {\n      if (creeps[role].create()) {\n        void 0;\n      }\n    }\n  }\n\n  // create desired amount of creeps\n  for (var role in creeps) {\n    if (creeps[role] && mustGenerate(creeps[role].desired, role)) {\n      if (typeof creeps[role].create === 'function') {\n        createCreep(role);\n        return; // done\n      }\n    }\n  }\n\n  // when full with energy..\n  if (Game.spawns.Spawn1.energyCapacity === Game.spawns.Spawn1.energy) {\n    // create max amount of creeps\n    for (var role in creeps) {\n      if (creeps[role] && mustGenerate(creeps[role].max, role)) {\n        createCreep(role);\n        return; // done\n      }\n    }\n  }\n};\n/* global Game, ERR_NOT_IN_RANGE, FIND_SOURCES */\n\"use strict\";\n\nmodule.exports = function (creep) {\n  if (creep.carry.energy < creep.carryCapacity) {\n    var sources = creep.room.find(FIND_SOURCES);\n    if (creep.harvest(sources[0]) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(sources[0]);\n    }\n  } else if (creep.transferEnergy(Game.spawns.Spawn1) === ERR_NOT_IN_RANGE) {\n    creep.moveTo(Game.spawns.Spawn1);\n  }\n};\n/* global Game, ERR_NOT_IN_RANGE, FIND_CONSTRUCTION_SITES, STRUCTURE_ROAD */\n'use strict';\n\nmodule.exports = function (creep) {\n\n  // only build when having more than ... energy\n  if (Game.spawns.Spawn1.energy <= 275 || !!Game.spawns.Spawn1.spawning) {\n    if (creep.carry.energy === 0) {\n      // let creep finish his energy first\n      return;\n    }\n  }\n\n  // collect energy\n  if (creep.carry.energy === 0) {\n    if (creep.carry.energy <= creep.carryCapacity && Game.spawns.Spawn1.transferEnergy(creep) === ERR_NOT_IN_RANGE) {\n      creep.say('gather resources');\n      creep.moveTo(Game.spawns.Spawn1);\n    }\n    return;\n  }\n\n  // build construction\n  var targets = creep.room.find(FIND_CONSTRUCTION_SITES);\n  if (targets.length) {\n    creep.say('building');\n    if (creep.build(targets[0]) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(targets[0]);\n    }\n    return;\n  }\n\n  // upgrade controller\n  if (creep.room.controller) {\n    creep.say('upgrade controller');\n    if (creep.upgradeController(creep.room.controller) === ERR_NOT_IN_RANGE) {\n      creep.room.createConstructionSite(creep, STRUCTURE_ROAD); // build road to the controller\n      creep.moveTo(creep.room.controller);\n    }\n    return;\n  }\n};\n/* global Game, FIND_HOSTILE_CREEPS, ERR_NOT_IN_RANGE */\n\"use strict\";\n\nmodule.exports = function (creep) {\n  // let targets = creep.room.find(FIND_HOSTILE_CREEPS);\n  var targets = creep.pos.findInRange(FIND_HOSTILE_CREEPS, 15);\n  if (targets.length) {\n    if (creep.attack(targets[0]) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(targets[0]);\n    }\n  } else {\n    if (Game.flags.Flag1) {\n      creep.moveTo(Game.flags.Flag1);\n    }\n  }\n};\n/* global FIND_SOURCES_ACTIVE, STRUCTURE_ROAD */\n'use strict';\n\n// let builder = require('builder');\n\nmodule.exports = function (creep) {\n\n  // build road to source\n  var sources = creep.room.find(FIND_SOURCES_ACTIVE);\n  creep.moveTo(sources[0]);\n  creep.room.createConstructionSite(creep, STRUCTURE_ROAD);\n};\n/* global  */\n\"use strict\";\n\nvar guard = require('guard');\n\nmodule.exports = function (creep) {\n  guard(creep);\n};\n/* global Game, FIND_MY_CREEPS, ERR_NOT_IN_RANGE */\n\"use strict\";\n\nmodule.exports = function (creep) {\n\n  function needsHealing(other) {\n    return other.hits < other.maxHits;\n  }\n\n  var creeps = creep.room.find(FIND_MY_CREEPS);\n  for (var _name in creeps) {\n    if (needsHealing(creeps[_name])) {\n      if (creep.heal(creeps[_name]) === ERR_NOT_IN_RANGE) {\n        creep.moveTo(creeps[_name]);\n      }\n\n      return;\n    }\n  }\n\n  // when nobody needs healing, move to Flag2\n  if (Game.flags.Flag2) {\n    creep.moveTo(Game.flags.Flag2);\n  }\n};"],"sourceRoot":"/source/"}