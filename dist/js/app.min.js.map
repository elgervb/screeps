{"version":3,"sources":["app.min.js"],"names":["harvester","require","guard","ranger","builder","healer","test","autospawn","module","exports","loop","_name","Game","creeps","creep","memory","role","canGenerate","maxNumber","active","i","createCreep","spawns","Spawn1","canCreateCreep","body","OK","energy","spawning","min","max","MOVE","WORK","CARRY","ATTACK","HEAL","RANGED_ATTACK","energyCapacity","carry","carryCapacity","sources","room","find","FIND_SOURCES","harvest","ERR_NOT_IN_RANGE","moveTo","transferEnergy","say","targets","FIND_CONSTRUCTION_SITES","length","build","controller","upgradeController","createConstructionSite","STRUCTURE_ROAD","isFull","me","pos","findInRange","FIND_HOSTILE_CREEPS","closest","findClosestByRange","attack","target","FIND_DROPPED_ENERGY","pickup","hits","hitsMax","flags","Flag1","FIND_SOURCES_ACTIVE","rangedAttack","needsHealing","other","FIND_MY_CREEPS","heal","Flag2"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global Game */\n'use strict';\n\nvar harvester = require('harvester');\nvar guard = require('guard');\nvar ranger = require('ranger');\nvar builder = require('builder');\nvar healer = require('healer');\nvar test = require('test');\nvar autospawn = require('autospawn');\n\nmodule.exports.loop = function () {\n\n  autospawn();\n\n  for (var _name in Game.creeps) {\n    if (_name) {\n      var creep = Game.creeps[_name];\n\n      if (creep.memory.role === 'harvester') {\n        harvester(creep);\n      }\n\n      if (creep.memory.role === 'builder') {\n        builder(creep);\n      }\n\n      if (creep.memory.role === 'guard') {\n        guard(creep);\n      }\n\n      if (creep.memory.role === 'ranger') {\n        ranger(creep);\n      }\n\n      if (creep.memory.role === 'healer') {\n        healer(creep);\n      }\n\n      if (creep.memory.role === 'test') {\n        test(creep);\n      }\n    }\n  }\n};\n/* global Game, MOVE, WORK, CARRY, ATTACK, RANGED_ATTACK, HEAL, OK */\n'use strict';\n\nmodule.exports = function () {\n\n  // only generate if larger than 200 energy\n  if (Game.spawns.Spawn1.energy < 200 || !!Game.spawns.Spawn1.spawning) {\n    return;\n  }\n\n  // Generate these creeps\n  var creeps = {\n    harvester: {\n      min: 2,\n      max: 5,\n      body: [MOVE, WORK, CARRY, CARRY]\n    },\n    guard: {\n      min: 2,\n      max: 12,\n      body: [MOVE, WORK, CARRY, ATTACK]\n    },\n    healer: {\n      min: 2,\n      max: 4,\n      body: [MOVE, HEAL]\n    },\n    ranger: {\n      min: 2,\n      max: 6,\n      body: [MOVE, RANGED_ATTACK]\n    },\n    builder: {\n      min: 1,\n      max: 2,\n      body: [MOVE, WORK, CARRY]\n    },\n    test: {\n      min: 0,\n      max: 1,\n      body: [MOVE, WORK, CARRY]\n    }\n  };\n\n  function canGenerate(maxNumber, role) {\n    var active = 0;\n\n    // collect roles\n    for (var i in Game.creeps) {\n      if (role === Game.creeps[i].memory.role) {\n        active = active + 1;\n      }\n    }\n    return active < maxNumber;\n  }\n\n  function createCreep(role) {\n    if (Game.spawns.Spawn1.canCreateCreep(creeps[role].body) === OK) {\n      var creep = Game.spawns.Spawn1.createCreep(creeps[role].body, null, { role: role });\n      if (typeof creep === 'string') {\n        void 0;\n      } else {\n        void 0;\n      }\n    }\n  }\n\n  // create min amount of creeps\n  for (var role in creeps) {\n    if (creeps[role] && canGenerate(creeps[role].min, role)) {\n      createCreep(role);\n      return; // done\n    }\n  }\n\n  // when full with energy..\n  if (Game.spawns.Spawn1.energyCapacity === Game.spawns.Spawn1.energy) {\n    // create max amount of creeps\n    for (var role in creeps) {\n      if (creeps[role] && canGenerate(creeps[role].max, role)) {\n        createCreep(role);\n        return; // done\n      }\n    }\n  }\n};\n/* global Game, ERR_NOT_IN_RANGE, FIND_SOURCES */\n\"use strict\";\n\nmodule.exports = function (creep) {\n  if (creep.carry.energy < creep.carryCapacity) {\n    var sources = creep.room.find(FIND_SOURCES);\n    if (creep.harvest(sources[0]) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(sources[0]);\n    }\n  } else if (creep.transferEnergy(Game.spawns.Spawn1) === ERR_NOT_IN_RANGE) {\n    creep.moveTo(Game.spawns.Spawn1);\n  }\n};\n/* global Game, ERR_NOT_IN_RANGE, FIND_CONSTRUCTION_SITES, STRUCTURE_ROAD */\n'use strict';\n\nmodule.exports = function (creep) {\n\n  // only build when having more than ... energy\n  if (Game.spawns.Spawn1.energy <= 275 || !!Game.spawns.Spawn1.spawning) {\n    if (creep.carry.energy === 0) {\n      // let creep finish his energy first\n      return;\n    }\n  }\n\n  // collect energy\n  if (creep.carry.energy === 0) {\n    if (creep.carry.energy <= creep.carryCapacity && Game.spawns.Spawn1.transferEnergy(creep) === ERR_NOT_IN_RANGE) {\n      creep.say('gather resources');\n      creep.moveTo(Game.spawns.Spawn1);\n    }\n    return;\n  }\n\n  // build construction\n  var targets = creep.room.find(FIND_CONSTRUCTION_SITES);\n  if (targets.length) {\n    creep.say('building');\n    if (creep.build(targets[0]) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(targets[0]);\n    }\n    return;\n  }\n\n  // upgrade controller\n  if (creep.room.controller) {\n    creep.say('upgrade controller');\n    if (creep.upgradeController(creep.room.controller) === ERR_NOT_IN_RANGE) {\n      creep.room.createConstructionSite(creep, STRUCTURE_ROAD); // build road to the controller\n      creep.moveTo(creep.room.controller);\n    }\n    return;\n  }\n};\n/* global Game, FIND_HOSTILE_CREEPS, ERR_NOT_IN_RANGE, FIND_DROPPED_ENERGY */\n\"use strict\";\n\nmodule.exports = function (creep) {\n  var isFull = function isFull(me) {\n    return me.carry.energy && me.carry.energy === me.carry.carryCapacity;\n  };\n\n  var targets = creep.pos.findInRange(FIND_HOSTILE_CREEPS, 10);\n\n  // attack !!\n  if (targets.length) {\n    var closest = creep.pos.findClosestByRange(targets);\n    if (creep.attack(closest) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(closest);\n    }\n  }\n\n  // pickup energy dropped from enemies\n  if (!isFull(creep)) {\n    var target = creep.pos.findClosestByRange(FIND_DROPPED_ENERGY);\n    if (target) {\n      if (creep.pickup(target) === ERR_NOT_IN_RANGE) {\n        creep.moveTo(target);\n      }\n    }\n  }\n\n  // bring the energy back home\n  if (creep.carry.energy) {\n    if (creep.transferEnergy(Game.spawns.Spawn1) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(Game.spawns.Spawn1);\n    }\n  }\n\n  // creep needs healing -> stay here\n  if (creep.hits < creep.hitsMax) {\n    return;\n  }\n\n  // move to flag and wait\n  if (Game.flags.Flag1) {\n    creep.moveTo(Game.flags.Flag1);\n  }\n};\n/* global FIND_SOURCES_ACTIVE, STRUCTURE_ROAD */\n'use strict';\n\n// let builder = require('builder');\n\nmodule.exports = function (creep) {\n\n  // build road to source\n  var sources = creep.room.find(FIND_SOURCES_ACTIVE);\n  creep.moveTo(sources[0]);\n  creep.room.createConstructionSite(creep, STRUCTURE_ROAD);\n};\n/* global Game, FIND_HOSTILE_CREEPS, ERR_NOT_IN_RANGE */\n\"use strict\";\n\nmodule.exports = function (creep) {\n  // let targets = creep.room.find(FIND_HOSTILE_CREEPS);\n  var targets = creep.pos.findInRange(FIND_HOSTILE_CREEPS, 10);\n  if (targets.length) {\n    var closest = creep.pos.findClosestByRange(targets);\n    if (creep.rangedAttack(closest) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(closest);\n    }\n  } else {\n    if (Game.flags.Flag1) {\n      creep.moveTo(Game.flags.Flag1);\n    }\n  }\n};\n/* global Game, FIND_MY_CREEPS, ERR_NOT_IN_RANGE */\n\"use strict\";\n\nmodule.exports = function (creep) {\n\n  function needsHealing(other) {\n    return other.hits < other.hitsMax;\n  }\n\n  var creeps = creep.room.find(FIND_MY_CREEPS);\n  for (var _name in creeps) {\n    if (needsHealing(creeps[_name])) {\n      if (creep.heal(creeps[_name]) === ERR_NOT_IN_RANGE) {\n        creep.moveTo(creeps[_name]);\n      }\n\n      return;\n    }\n  }\n\n  // when nobody needs healing, move to Flag2\n  if (Game.flags.Flag2) {\n    creep.moveTo(Game.flags.Flag2);\n  }\n};"],"sourceRoot":"/source/"}