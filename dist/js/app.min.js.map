{"version":3,"sources":["app.min.js"],"names":["module","exports","loop","Game","spawns","Spawn1","initialized","room","createFlag","pos","x","y","COLOR_RED","COLOR_GREEN","require","_name","creeps","creep","memory","role","canGenerate","maxNumber","active","i","createCreep","canCreateCreep","body","OK","time","energy","spawning","harvester","min","max","MOVE","WORK","CARRY","guard","ATTACK","healer","HEAL","ranger","RANGED_ATTACK","builder","test","energyCapacity","activeSource","undefined","start","Date","getTime","isFull","carry","carryCapacity","logPerf","task","activeSourceID","getObjectById","source","findClosestByRange","FIND_SOURCES_ACTIVE","id","isNearTo","transferEnergy","ERR_NOT_IN_RANGE","moveTo","harvest","targets","find","FIND_CONSTRUCTION_SITES","length","build","controller","upgradeController","createConstructionSite","STRUCTURE_ROAD","findInRange","FIND_HOSTILE_CREEPS","closest","attack","FIND_DROPPED_ENERGY","pickup","hits","hitsMax","flags","Defenders","sources","rangedAttack","needsHealing","other","FIND_MY_CREEPS","heal","Healers"],"mappings":"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","file":"app.min.js","sourcesContent":["/* global Game, COLOR_RED, COLOR_GREEN */\n'use strict';\n\nmodule.exports.loop = function () {\n\n  if (!Game.spawns.Spawn1) {\n    return;\n  }\n\n  var initialized = false;\n\n  if (!initialized) {\n    Game.spawns.Spawn1.room.createFlag(Game.spawns.Spawn1.pos.x - 3, Game.spawns.Spawn1.pos.y + 5, 'Defenders', COLOR_RED);\n    Game.spawns.Spawn1.room.createFlag(Game.spawns.Spawn1.pos.x - 5, Game.spawns.Spawn1.pos.y + 5, 'Healers', COLOR_GREEN);\n    initialized = true;\n  }\n\n  require('autospawn')();\n\n  for (var _name in Game.creeps) {\n    if (_name) {\n      var creep = Game.creeps[_name];\n\n      if (creep.memory.role === 'harvester') {\n        require('harvester')(creep);\n      }\n\n      if (creep.memory.role === 'builder') {\n        require('builder')(creep);\n      }\n\n      if (creep.memory.role === 'guard') {\n        require('guard')(creep);\n      }\n\n      if (creep.memory.role === 'ranger') {\n        require('ranger')(creep);\n      }\n\n      if (creep.memory.role === 'healer') {\n        require('healer')(creep);\n      }\n\n      if (creep.memory.role === 'test') {\n        require('test')(creep);\n      }\n    }\n  }\n};\n/* global Game, MOVE, WORK, CARRY, ATTACK, RANGED_ATTACK, HEAL, OK */\n'use strict';\n\nmodule.exports = function () {\n\n  // only generate if larger than 200 energy\n  if (Game.spawns.Spawn1.energy < 200 || !!Game.spawns.Spawn1.spawning) {\n    return;\n  }\n\n  // Generate these creeps\n  var creeps = {\n    harvester: {\n      min: 2,\n      max: 5,\n      body: [MOVE, WORK, CARRY, CARRY]\n    },\n    guard: {\n      min: 2,\n      max: 6,\n      body: [MOVE, WORK, CARRY, ATTACK]\n    },\n    healer: {\n      min: 2,\n      max: 4,\n      body: [MOVE, HEAL]\n    },\n    ranger: {\n      min: 2,\n      max: 6,\n      body: [MOVE, RANGED_ATTACK]\n    },\n    builder: {\n      min: 1,\n      max: 2,\n      body: [MOVE, WORK, CARRY]\n    },\n    test: {\n      min: 0,\n      max: 1,\n      body: [MOVE, WORK, CARRY, CARRY]\n    }\n  };\n\n  function canGenerate(maxNumber, role) {\n    var active = 0;\n\n    // collect roles\n    for (var i in Game.creeps) {\n      if (role === Game.creeps[i].memory.role) {\n        active = active + 1;\n      }\n    }\n    return active < maxNumber;\n  }\n\n  function createCreep(role) {\n    if (Game.spawns.Spawn1.canCreateCreep(creeps[role].body) === OK) {\n      var creep = Game.spawns.Spawn1.createCreep(creeps[role].body, 'creep.' + role + '.' + Game.time, { role: role });\n      if (typeof creep === 'string') {\n        void 0;\n      } else {\n        void 0;\n      }\n    }\n  }\n\n  // create min amount of creeps\n  for (var role in creeps) {\n    if (creeps[role] && canGenerate(creeps[role].min, role)) {\n      createCreep(role);\n      return; // done\n    }\n  }\n\n  // when full with energy..\n  if (Game.spawns.Spawn1.energyCapacity === Game.spawns.Spawn1.energy) {\n    // create max amount of creeps\n    for (var role in creeps) {\n      if (creeps[role] && canGenerate(creeps[role].max, role)) {\n        createCreep(role);\n        return; // done\n      }\n    }\n  }\n};\n/* global Game, ERR_NOT_IN_RANGE, FIND_SOURCES_ACTIVE */\n'use strict';\n\nmodule.exports = function (creep) {\n\n  var activeSource = undefined;\n\n  var start = new Date().getTime();\n  var isFull = function isFull() {\n    return creep.carry.energy === creep.carryCapacity;\n  };\n  var logPerf = function logPerf(task) {\n    var time = new Date().getTime() - start;\n    if (time > 5) {\n      void 0;\n    }\n  };\n\n  // setup creep memory\n  if (!creep.memory.activeSourceID) {\n    var source = creep.pos.findClosestByRange(FIND_SOURCES_ACTIVE);\n    if (source) {\n      creep.memory.activeSourceID = source.id;\n      activeSource = source;\n    }\n  } else {\n    activeSource = Game.getObjectById(creep.memory.activeSourceID);\n  }\n\n  // check if energy should be transferred back home\n  if (isFull() || creep.carry.energy && creep.pos.isNearTo(Game.spawns.Spawn1)) {\n    // bring energy back home\n    if (creep.transferEnergy(Game.spawns.Spawn1) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(Game.spawns.Spawn1);\n    }\n    logPerf('transferEnergy');\n    return;\n  }\n\n  // harvest resources\n  if (activeSource && !isFull()) {\n    if (creep.harvest(activeSource) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(activeSource);\n    }\n    logPerf('harvest');\n    return;\n  }\n\n  logPerf('idle');\n};\n/* global Game, ERR_NOT_IN_RANGE, FIND_CONSTRUCTION_SITES, STRUCTURE_ROAD */\n\"use strict\";\n\nmodule.exports = function (creep) {\n\n  // only build when having more than ... energy\n  if (Game.spawns.Spawn1.energy <= 275 || !!Game.spawns.Spawn1.spawning) {\n    if (creep.carry.energy === 0) {\n      // let creep finish his energy first\n      return;\n    }\n  }\n\n  // collect energy\n  if (creep.carry.energy === 0) {\n    if (creep.carry.energy <= creep.carryCapacity && Game.spawns.Spawn1.transferEnergy(creep) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(Game.spawns.Spawn1);\n    }\n    return;\n  }\n\n  // build construction\n  var targets = creep.room.find(FIND_CONSTRUCTION_SITES);\n  if (targets.length) {\n    if (creep.build(targets[0]) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(targets[0]);\n    }\n    return;\n  }\n\n  // upgrade controller\n  if (creep.room.controller) {\n    if (creep.upgradeController(creep.room.controller) === ERR_NOT_IN_RANGE) {\n      creep.room.createConstructionSite(creep, STRUCTURE_ROAD); // build road to the controller\n      creep.moveTo(creep.room.controller);\n    }\n    return;\n  }\n};\n/* global Game, FIND_HOSTILE_CREEPS, ERR_NOT_IN_RANGE, FIND_DROPPED_ENERGY */\n\"use strict\";\n\nmodule.exports = function (creep) {\n  var isFull = function isFull() {\n    return creep.carry.energy && creep.carry.energy === creep.carryCapacity;\n  };\n\n  var targets = creep.pos.findInRange(FIND_HOSTILE_CREEPS, 10);\n  // attack !!\n  if (targets.length) {\n    var closest = creep.pos.findClosestByRange(targets);\n    if (creep.attack(closest) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(closest);\n    }\n    return;\n  }\n\n  // pickup energy dropped from enemies\n  if (!isFull()) {\n    var energy = creep.pos.findClosestByRange(FIND_DROPPED_ENERGY);\n    if (energy) {\n      if (creep.pickup(energy) === ERR_NOT_IN_RANGE) {\n        creep.moveTo(energy);\n      }\n      return;\n    }\n  }\n\n  // bring the energy back home\n  if (creep.carry.energy > 0) {\n    if (creep.transferEnergy(Game.spawns.Spawn1) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(Game.spawns.Spawn1);\n    }\n    return;\n  }\n\n  // creep needs healing -> stay here\n  if (creep.hits < creep.hitsMax) {\n    return;\n  }\n\n  // move to flag and wait\n  if (Game.flags.Defenders) {\n    creep.moveTo(Game.flags.Defenders);\n  }\n};\n/* global FIND_SOURCES_ACTIVE, STRUCTURE_ROAD */\n'use strict';\n\n// let builder = require('builder');\n\nmodule.exports = function (creep) {\n\n  // build road to source\n  var sources = creep.room.find(FIND_SOURCES_ACTIVE);\n  creep.moveTo(sources[0]);\n\n  creep.room.createConstructionSite(creep, STRUCTURE_ROAD);\n\n  // build\n  //  require('builder')(creep);\n\n  // harvest\n  //  require('harvester')(creep);\n\n  // move to Spawn1\n  // creep.moveTo(Game.spawns.Spawn1);\n\n  // move to controller\n  // creep.moveTo(creep.room.controller);\n};\n/* global Game, FIND_HOSTILE_CREEPS, ERR_NOT_IN_RANGE */\n\"use strict\";\n\nmodule.exports = function (creep) {\n  // let targets = creep.room.find(FIND_HOSTILE_CREEPS);\n  var targets = creep.pos.findInRange(FIND_HOSTILE_CREEPS, 10);\n  if (targets.length) {\n    var closest = creep.pos.findClosestByRange(targets);\n    if (creep.rangedAttack(closest) === ERR_NOT_IN_RANGE) {\n      creep.moveTo(closest);\n    }\n  } else if (Game.flags.Defenders) {\n    creep.moveTo(Game.flags.Defenders);\n  }\n};\n/* global Game, FIND_MY_CREEPS, ERR_NOT_IN_RANGE */\n\"use strict\";\n\nmodule.exports = function (creep) {\n\n  function needsHealing(other) {\n    return other.hits < other.hitsMax;\n  }\n\n  var creeps = creep.room.find(FIND_MY_CREEPS);\n  for (var _name in creeps) {\n    if (needsHealing(creeps[_name])) {\n      if (creep.heal(creeps[_name]) === ERR_NOT_IN_RANGE) {\n        creep.moveTo(creeps[_name]);\n      }\n      return;\n    }\n  }\n\n  // when nobody needs healing, move to Flag Healers\n  if (Game.flags.Healers) {\n    creep.moveTo(Game.flags.Healers);\n  }\n};"],"sourceRoot":"/source/"}